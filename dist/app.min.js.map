{"version":3,"sources":["app.min.js"],"names":["MyApp","angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","controllerAs","service","$http","this","syncMethod","getThings","get","then","response","data","err","console","error","makeMove","move","hookEvent","post","success","status","headers","updateBoard","$scope","ApiService","convertFormat","x","y","letters","numbers","charAt","toArrayCoordinates","chessNotation","letter","number","i","initializeBoard","clearBoard","placeFigures","moveNum","board","color","row","fetchMoves","rebuildBoard","moves","sort","a","b","position","length","coordStart","start","coordEnd","end","figure","Array","setInterval","clickCell","sentMove","directive","$document","$window","link","scope","element","attrs","doStuff","filter","toggleFilter"],"mappings":"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","file":"app.min.js","sourcesContent":["var MyApp = angular.module(\"MyApp\", [\"ui.router\"]);\n\nMyApp.config([\"$stateProvider\", \"$urlRouterProvider\", function($stateProvider, $urlRouterProvider) {\n  $urlRouterProvider.otherwise(\"/intro\");\n\n  $stateProvider\n    .state(\"main\", {\n      url: \"/\",\n      templateUrl: \"templates/main/main.html\",\n      controller: \"MainController\",\n      controllerAs: \"main\"\n    })\n    .state(\"main.intro\", {\n      url: \"intro\",\n      templateUrl: \"templates/intro/intro.html\",\n      controller: \"IntroController\",\n      controllerAs: \"introCtrl\"\n    })\n    .state(\"main.login\", {\n      url: \"login\",\n      templateUrl: \"templates/login/login.html\",\n    })\n    .state(\"main.other\", {\n      url: \"other\",\n      templateUrl: \"templates/other/other.html\",\n    })\n    .state(\"stuff\", {\n      url: \"/stuff\",\n      templateUrl: \"templates/stuff/stuff.html\",\n      controller: \"StuffController\",\n      controllerAs: \"stuffCtrl\"\n    })\n}]);\n\nMyApp.service(\"ApiService\", [\"$http\", function($http) {\n\n  this.syncMethod = function() {\n    return 0;\n  }\n\n  this.getThings = function() {\n    return $http.get(\"/thing\")\n      .then(function (response) {\n        return response.data;\n      })\n      .catch(function (err) {\n        console.error(\"Error ApiService getThings \", err);\n        return {};\n      })\n  }\n  \n  this.makeMove = function(move, hookEvent) {\n    return $http.post(\"/move\", move)\n      .success(function (data, status, headers, config) {\n        hookEvent(data);\n      })\n      .error(function (data, status, headers, config) {\n        console.error(\"Error ApiService makeMove \", data);\n      })\n  }\n  \n  this.updateBoard = function(hookEvent) {\n    return $http.get(\"/move\")\n      .success(function (data, status, headers, config) {\n        hookEvent(data);\n      })\n      .error(function (data, status, headers, config) {\n        console.error(\"Error ApiService updateBoard \", data);\n      })\n  }\n\n}])\n\nMyApp.controller(\"IntroController\", [\"$scope\", \"ApiService\", function($scope, ApiService) {\n  $scope.start = \"\";\n  $scope.board = new Array(8);\n  for (var i = 0; i < 8; i++) {\n    $scope.board[i] = new Array(8);\n  }\n\n  fetchMoves();\n  setInterval(fetchMoves, 1000);\n  \n  function convertFormat(x, y) {\n    var letters = \"abcdefgh\";\n    var numbers = \"87654321\";\n    return letters.charAt(x - 1) + numbers.charAt(y - 1);\n  }\n\n  function toArrayCoordinates(chessNotation) {\n    var letter = chessNotation.charAt(0);\n    var number = chessNotation.charAt(1);\n    var letters = \"abcdefgh\";\n    \n    var x;\n    for (var i = 0; i < 8; i++) {\n      if (letters.charAt(i) == letter) {\n        x = i;\n        break;\n      }\n    }\n    var y = 8 - number;\n    return { x: x, y: y};\n  }\n\n  function initializeBoard() {\n    clearBoard();\n    placeFigures(\"black\");\n    placeFigures(\"white\");\n    $scope.moveNum = 1;\n  }\n\n  function clearBoard() {\n    for (var x = 0; x < 8; x++) {\n      for (var y = 0; y < 8; y++) {\n        $scope.board[x][y] = \"\";\n      }\n    }\n  }\n  \n  function placeFigures(color) {\n    if (color != \"black\" && color != \"white\") {\n      return;\n    }\n    \n    var row = (color == \"black\" ? 0 : 7);\n    $scope.board[0][row] = $scope.board[7][row] = (color == \"black\" ? \"\\u265c\" : \"\\u2656\");\n    $scope.board[1][row] = $scope.board[6][row] = (color == \"black\" ? \"\\u265e\" : \"\\u2658\");\n    $scope.board[2][row] = $scope.board[5][row] = (color == \"black\" ? \"\\u265d\" : \"\\u2657\");\n    $scope.board[3][row] = (color == \"black\" ? \"\\u265b\" : \"\\u2655\");\n    $scope.board[4][row] = (color == \"black\" ? \"\\u265a\" : \"\\u2654\");\n    \n    row = (color == \"black\" ? 1 : 6);\n    for (var i = 0; i < 8; i++) {\n      $scope.board[i][row] = (color == \"black\" ? \"\\u265f\" : \"\\u2659\");\n    }\n  }\n\n  function fetchMoves() {\n    ApiService.updateBoard(rebuildBoard);\n  }\n  \n  function rebuildBoard(moves) {\n    initializeBoard();\n    moves.sort(function(a,b){return a.position - b.position;});\n    for (var i = 0; i < moves.length; i++) {\n      makeMove(moves[i]);\n    }\n  }\n\n  function makeMove(move) {\n    var coordStart = toArrayCoordinates(move.start);\n    var coordEnd = toArrayCoordinates(move.end);\n    var figure = $scope.board[coordStart.x][coordStart.y];\n    $scope.board[coordStart.x][coordStart.y] = \"\";\n    $scope.board[coordEnd.x][coordEnd.y] = figure;\n    $scope.moveNum++;\n  }\n\n  $scope.clickCell = function(x, y){\n    if ($scope.start) {\n      sentMove = ApiService.makeMove({\n        start: $scope.start,\n        end: convertFormat(x, y)\n      }, makeMove);\n      $scope.start = \"\";\n    } else {\n      $scope.start = convertFormat(x, y);\n    }\n  }\n}]);\n\nMyApp.directive(\"navTop\", function() {\n  return {\n    templateUrl: \"templates/layout-directives/nav-top2.html\",\n  };\n});\n\nMyApp.directive(\"verticalMenu\", [\"$document\", \"$window\", function($document, $window) {\n  return {\n    templateUrl: \"templates/layout-directives/vertical-menu.html\",\n    link: function(scope, element, attrs) {\n      // var navbar = document.getElementById(\"navbar\");\n      // var menu = element.find(\".fixed-pos\")[0];\n\n      // scope.menuToggle = [\n      //   true,\n      //   true,\n      //   true,\n      //   true,\n      // ];\n\n      // scope.toggleMenu = function(index) {\n      //   scope.menuToggle[index] = !scope.menuToggle[index];\n      // }\n\n      // var resizeMenu = function() {\n      //   var top = navbar.clientHeight - $document.scrollTop();\n      //   if (top < 0) {\n      //     menu.style.top = 0;\n      //   } else {\n      //     menu.style.top = top + 3 + \"px\";\n      //   }\n      // }\n\n      // $window.addEventListener(\"resize\", resizeMenu, true);\n      // $window.addEventListener(\"scroll\", resizeMenu, true);\n\n      // scope.$on(\"$destroy\", function() {\n      //   $window.removeEventListener(\"resize\", resizeMenu, true);\n      //   $window.removeEventListener(\"scroll\", resizeMenu, true);\n      // });\n\n      // resizeMenu();\n    }\n  };\n}]);\n\nMyApp.controller(\"LoginController\", function() {\n\n})\n\nMyApp.controller(\"MainController\", [\"$scope\", function($scope) {\n  $scope.doStuff = function() {\n    return \"stuff\";\n  }\n}])\n\nMyApp.controller(\"OtherController\", [\"$scope\", function($scope) {\n  $scope.filter = true;\n  $scope.toggleFilter = function() {\n    $scope.filter = !$scope.filter;\n  }\n}])\n\nMyApp.controller(\"StuffController\", function() {\n\n})\n"],"sourceRoot":"/source/"}