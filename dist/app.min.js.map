{"version":3,"sources":["app.min.js"],"names":["MyApp","angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","controllerAs","directive","$document","$window","link","scope","element","attrs","expect","require","describe","MainController","$log","beforeEach","inject","_MainController_","_$log_","it","sinon","spy","DoSomething","assert","info","calledOnce","calledWith","restore"],"mappings":"AAAA,GAAIA,OAAQC,QAAQC,OAAO,SAAU,aAErCF,OAAMG,QAAQ,iBAAkB,qBAAsB,SAASC,EAAgBC,GAC7EA,EAAmBC,UAAU,UAE7BF,EACGG,MAAM,QACLC,IAAK,IACLC,YAAa,2BACbC,WAAY,iBACZC,aAAc,SAEfJ,MAAM,cACLC,IAAK,QACLC,YAAa,+BAEdF,MAAM,aACLC,IAAK,OACLC,YAAa,6BAEdF,MAAM,SACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,kBACZC,aAAc,iBAIpBX,MAAMY,UAAU,SAAU,WACxB,OACEH,YAAa,8CAIjBT,MAAMY,UAAU,gBAAiB,YAAa,UAAW,SAASC,EAAWC,GAC3E,OACEL,YAAa,iDACbM,KAAM,SAASC,EAAOC,EAASC,SAqCnClB,MAAMU,WAAW,iBAAkB,aAInC,MAAMS,QAASC,QAAQ,QAAQD,MAE/BE,UAAS,iBAAkB,WAEvB,GAAIC,GACAC,CAEJC,YAAW,WAEPtB,OAAO,SAGPuB,OAAO,SAAUC,EAAkBC,GAC/BL,EAAiBI,EACjBH,EAAOI,MAIfN,SAAS,eAAgB,WACrBO,GAAG,2CAA4C,WAE3CC,MAAMC,IAAIP,EAAM,QAGhBD,EAAeS,cAGfC,OAAOT,EAAKU,KAAKC,YACjBF,OAAOT,EAAKU,KAAKE,WAAW,oBAG5BZ,EAAKU,KAAKG,gBAItBpC,MAAMU,WAAW,kBAAmB","file":"app.min.js","sourcesContent":["var MyApp = angular.module(\"MyApp\", [\"ui.router\"]);\r\n\r\nMyApp.config([\"$stateProvider\", \"$urlRouterProvider\", function($stateProvider, $urlRouterProvider) {\r\n  $urlRouterProvider.otherwise(\"/intro\");\r\n\r\n  $stateProvider\r\n    .state(\"main\", {\r\n      url: \"/\",\r\n      templateUrl: \"templates/main/main.html\",\r\n      controller: \"MainController\",\r\n      controllerAs: \"main\"\r\n    })\r\n    .state(\"main.intro\", {\r\n      url: \"intro\",\r\n      templateUrl: \"templates/intro/intro.html\",\r\n    })\r\n    .state(\"main.test\", {\r\n      url: \"test\",\r\n      templateUrl: \"templates/test/test.html\",\r\n    })\r\n    .state(\"stuff\", {\r\n      url: \"/stuff\",\r\n      templateUrl: \"templates/stuff/stuff.html\",\r\n      controller: \"StuffController\",\r\n      controllerAs: \"stuffCtrl\"\r\n    })\r\n}]);\r\n\nMyApp.directive(\"navTop\", function() {\r\n  return {\r\n    templateUrl: \"templates/layout-directives/nav-top.html\",\r\n  };\r\n});\r\n\nMyApp.directive(\"verticalMenu\", [\"$document\", \"$window\", function($document, $window) {\r\n  return {\r\n    templateUrl: \"templates/layout-directives/vertical-menu.html\",\r\n    link: function(scope, element, attrs) {\r\n      // var navbar = document.getElementById(\"navbar\");\r\n      // var menu = element.find(\".fixed-pos\")[0];\r\n\r\n      // scope.menuToggle = [\r\n      //   true,\r\n      //   true,\r\n      //   true,\r\n      //   true,\r\n      // ];\r\n\r\n      // scope.toggleMenu = function(index) {\r\n      //   scope.menuToggle[index] = !scope.menuToggle[index];\r\n      // }\r\n\r\n      // var resizeMenu = function() {\r\n      //   var top = navbar.clientHeight - $document.scrollTop();\r\n      //   if (top < 0) {\r\n      //     menu.style.top = 0;\r\n      //   } else {\r\n      //     menu.style.top = top + 3 + \"px\";\r\n      //   }\r\n      // }\r\n\r\n      // $window.addEventListener(\"resize\", resizeMenu, true);\r\n      // $window.addEventListener(\"scroll\", resizeMenu, true);\r\n\r\n      // scope.$on(\"$destroy\", function() {\r\n      //   $window.removeEventListener(\"resize\", resizeMenu, true);\r\n      //   $window.removeEventListener(\"scroll\", resizeMenu, true);\r\n      // });\r\n\r\n      // resizeMenu();\r\n    }\r\n  };\r\n}]);\r\n\nMyApp.controller(\"MainController\", function() {\r\n  var vm = this;\r\n})\r\n\nconst expect = require(\"chai\").expect;\r\n\r\ndescribe('MainController', function () {\r\n    // define variables for the services we want to access in tests\r\n    var MainController,\r\n        $log;\r\n\r\n    beforeEach(function () {\r\n        // load the module we want to test\r\n        module('MyApp');\r\n\r\n        // inject the services we want to test\r\n        inject(function (_MainController_, _$log_) {\r\n            MainController = _MainController_;\r\n            $log = _$log_;\r\n        })\r\n    });\r\n\r\n    describe('#DoSomething', function () {\r\n        it('should log the message \"something done!\"', function () {\r\n            // Arrange\r\n            sinon.spy($log, 'info');\r\n\r\n            // Act\r\n            MainController.DoSomething();\r\n    \r\n            // Assert\r\n            assert($log.info.calledOnce);\r\n            assert($log.info.calledWith('something done!'));\r\n\r\n            // Cleanup\r\n            $log.info.restore();\r\n        });\r\n    });\r\n});\nMyApp.controller(\"StuffController\", function() {\r\n\r\n})\r\n"],"sourceRoot":"/source/"}